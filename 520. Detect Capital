class Solution {
public:
    bool detectCapitalUse(string word) {
        int l=word.size();
        int cap=0;
        int low=0;
        for(int i=0;i<l;i++){
            if(islower(word[i]))
                low++;
            else
                cap++;
        }

        if(cap==l || low==l || (isupper(word[0])&&low==l-1)) //low=l-1 b/c out of all word total no of words with first cap and rest lower is (total word-cap word = lower word length)
            return true;
        else 
            return false;
    }
};


approach 2 
class Solution {
public:
    bool detectCapitalUse(string word) {
        int cnt=0;
        int loc;
        for(int i=0;i<word.length();i++){
            if(word[i]>='A' && word[i]<='Z'){
                cnt++;
                loc = i;
            }
        }
        if(cnt == word.length() || cnt == 0 || (cnt==1 && loc==0))
            return true;
        return false;
    }
};  
