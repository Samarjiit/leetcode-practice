class Solution {
public:
    vector<int> findAnagrams(string s, string p) {
     int len_s=s.size();
     int len_p=p.size();

     if(len_s<len_p)return {};

//creating a 2 vector (a-z) to store the freq of the letters
     vector<int>p_freq(26,0);
     vector<int>window(26,0);

     for(int i=0;i<len_p;i++){
         p_freq[p[i]-'a']++;
         window[s[i]-'a']++;

     }
     vector<int>ans;
     if(p_freq==window) ans.push_back(0); //if first window as anagram
     //checking for the next window by removing first ele and adding 4th element --- nth element
     for(int i=len_p;i<len_s;i++){
         window[s[i-len_p]-'a']--;
         window[s[i]-'a']++;

         if(p_freq==window) ans.push_back(i-len_p+1);
     }
     return ans;
    }
};


//t.c = o(26*n)
//s.c = 0(26)= 0(1)



//t.c = o(26*n)
//s.c = 0(26)= 0(1)
